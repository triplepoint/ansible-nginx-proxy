---
- name: Ensure Docker-related Python packages are present
  pip:
    name:
      - docker
      - docker-compose

- name: Ensure the Docker container image is up to date
  docker_image:
    name: jwilder/nginx-proxy
    source: pull
    tag: "{{ nginx_proxy_version }}"
  notify: restart nginx-proxy

- name: Assemble the set of key file volume mounts
  set_fact: _proxy_key_volumes="{{ item.key_path }}:/etc/nginx/certs/{{ item.domain }}.key:ro"
  with_items: "{{ nginx_proxy_ssl_files }}"
  register: _proxy_key_volume_results

- name: Pull the processed list out of the result object
  set_fact: _proxy_key_volume_results_mapped="{{ _proxy_key_volume_results.results | map(attribute='ansible_facts._proxy_key_volumes') | list }}"

- name: Assemble the set of cert file volume mounts
  set_fact: _proxy_cert_volumes="{{ item.certificate_path }}:/etc/nginx/certs/{{ item.domain }}.crt:ro"
  with_items: "{{ nginx_proxy_ssl_files }}"
  register: _proxy_cert_volume_results

- name: Pull the processed list out of the result object
  set_fact: _proxy_cert_volume_results_mapped="{{ _proxy_cert_volume_results.results | map(attribute='ansible_facts._proxy_cert_volumes') | list }}"

- name: Append any additional volume mounts
  set_fact:
    _nginx_proxy_volumes: "['/var/run/docker.sock:/tmp/docker.sock:ro'] + {{ _proxy_key_volume_results_mapped }} + {{ _proxy_cert_volume_results_mapped }}"

- name: Ensure the docker-compose template directory exists
  file: state=directory path="/opt/ansible-docker-compose/nginx-proxy"

- name: Ensure this service's docker-compose template is present
  template:
    src: docker-compose.yml.j2
    dest: /opt/ansible-docker-compose/nginx-proxy/docker-compose.yml

- name: Ensure the service container(s) is/are started
  docker_compose:
    project_src: /opt/ansible-docker-compose/nginx-proxy
